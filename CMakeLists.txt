CMAKE_MINIMUM_REQUIRED( VERSION 2.8 ) 
PROJECT( hnode_manager_daemon ) 

SET( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/" )

SET( HNODE_MANAGER_DAEMON_SRC
     ${CMAKE_SOURCE_DIR}/src/hmsrv.cpp
     ${CMAKE_SOURCE_DIR}/src/RootResource.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeResource.cpp
     ${CMAKE_SOURCE_DIR}/src/HNodeManager.cpp
     ${CMAKE_SOURCE_DIR}/src/HNode.cpp

     #${CMAKE_SOURCE_DIR}/src/SwitchResource.cpp
)

SET(Boost_USE_STATIC_LIBS OFF)
SET(Boost_USE_MULTITHREADED OFF)
SET(Boost_USE_STATIC_RUNTIME OFF)
SET(Boost_DEBUG OFF)

FIND_PACKAGE(GLIB REQUIRED)
FIND_PACKAGE(GOBJECT REQUIRED)
FIND_PACKAGE(AVAHI REQUIRED)
FIND_PACKAGE(HNREST REQUIRED)
FIND_PACKAGE(HNSERVER REQUIRED)
FIND_PACKAGE(LibXml2 REQUIRED)
FIND_PACKAGE(CURL REQUIRED)
FIND_PACKAGE(Boost 1.49.0 COMPONENTS regex) 

INCLUDE_DIRECTORIES( ${GLIB_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${GOBJECT_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${AVAHI_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${HNREST_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${HNSERVER_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${CURL_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${LIBXML2_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${CMAKE_SOURCE_DIR}/src )

ADD_EXECUTABLE( hnode_manager_daemon ${HNODE_MANAGER_DAEMON_SRC} ) 
TARGET_LINK_LIBRARIES( hnode_manager_daemon ${GLIB_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_manager_daemon ${GOBJECT_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_manager_daemon ${CURL_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_manager_daemon ${HNREST_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_manager_daemon ${HNSERVER_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_manager_daemon ${LIBXML2_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_manager_daemon ${Boost_LIBRARIES} )

